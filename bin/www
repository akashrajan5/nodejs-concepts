const http = require('node:http');
const app = require('../app');
const cluster = require('node:cluster');
// const mongodb = require('../config/mongodb');
// const OS = require('node:os');
require('dotenv').config();
const port = 3000;



// console.log("Number of cores : ", OS.cpus().length);



if (cluster.isMaster) {
    console.log(`Master process ${process.pid} is running`);
    // create forks based on number of cores in the cpu, cores can be found using os.cpus().length, only increase workers on the basis of cpus
    let workers = 2;
    for (let i = 0; i < workers; i++) cluster.fork();

    cluster.on('exit', (worker, code, signal) => {
        console.log(`worker ${worker.process.pid} died\n\n`);
        cluster.fork();
    });

} else {
    console.log(`Worker process ${process.pid} started`);
    app.set('port', process.env.PORT || port);
    http.createServer(app).listen(process.env.PORT || port);
}